name: Build rm-shot

on:
  push:
    branches: ['**']
    tags: ['v*.*.*']
  pull_request:
    branches: ['**']

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [armv7, aarch64]
        include:
          - arch: armv7
            cc: arm-linux-gnueabihf-gcc
            packages: gcc-arm-linux-gnueabihf
          - arch: aarch64
            cc: aarch64-linux-gnu-gcc
            packages: gcc-aarch64-linux-gnu

    steps:
      - name: Checkout rm-shot
        uses: actions/checkout@v4

      - name: Install cross-compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.packages }}

      - name: Download xovi release
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/asivery/xovi/releases/latest | jq -r .tag_name)

          if [ "$LATEST_TAG" = "null" ] || [ -z "$LATEST_TAG" ]; then
            echo "Error: No xovi release found"
            exit 1
          fi

          echo "Using xovi release: $LATEST_TAG"

          curl -L -o xovi.tar.gz \
            "https://github.com/asivery/xovi/archive/refs/tags/$LATEST_TAG.tar.gz"
          tar -xzf xovi.tar.gz
          mv xovi-* xovi-repo
          rm xovi.tar.gz
          echo "Successfully extracted xovi release $LATEST_TAG"

      - name: Build ${{ matrix.arch }}
        env:
          XOVI_REPO: ${{ github.workspace }}/xovi-repo
          CC_ARMV7: arm-linux-gnueabihf-gcc
          CC_AARCH64: aarch64-linux-gnu-gcc
        run: |
          if [ "${{ matrix.arch }}" = "armv7" ]; then
            make rm-shot-armv7.so
          else
            make rm-shot-aarch64.so
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rm-shot-${{ matrix.arch }}
          path: rm-shot-${{ matrix.arch }}.so
          retention-days: 90

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        uses: orhun/git-cliff-action@v4
        with:
          config: cliff.toml
          args: --latest --strip header
        env:
          OUTPUT: CHANGELOG.md

      - name: Download armv7 artifact
        uses: actions/download-artifact@v4
        with:
          name: rm-shot-armv7

      - name: Download aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: rm-shot-aarch64

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            rm-shot-armv7.so
            rm-shot-aarch64.so
          body_path: CHANGELOG.md
